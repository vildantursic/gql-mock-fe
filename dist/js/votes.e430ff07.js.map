{"version":3,"sources":["webpack:///./src/views/Votes.vue?78a3","webpack:///./src/graphql/NumOfVotes.gql","webpack:///./src/views/Votes.vue?3e82","webpack:///src/views/Votes.vue","webpack:///./src/views/Votes.vue?d22d","webpack:///./src/views/Votes.vue?adeb","webpack:///./src/graphql/VoteAdded.gql"],"names":["_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Votes_vue_vue_type_style_index_0_id_e4572d94_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Votes_vue_vue_type_style_index_0_id_e4572d94_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default","n","doc","kind","definitions","operation","name","value","variableDefinitions","directives","selectionSet","selections","arguments","loc","start","end","source","body","locationOffset","line","column","collectFragmentReferences","node","refs","add","type","forEach","selection","def","definitionRefs","findOperation","i","length","element","oneQuery","operationName","newDoc","hasOwnProperty","opRefs","Set","allRefs","newRefs","refName","size","prevRefs","has","childRefs","childRef","op","push","module","exports","render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","query","scopedSlots","_u","key","fn","ref","data","result","_v","_s","numOfVotes","left","right","_e","document","update-query","onVoteAdded","staticRenderFns","Votesvue_type_script_lang_js_","methods","previousResult","_ref","subscriptionData","Object","objectSpread","voteAdded","views_Votesvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__"],"mappings":"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","file":"js/votes.e430ff07.js","sourcesContent":["import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Votes.vue?vue&type=style&index=0&id=e4572d94&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Votes.vue?vue&type=style&index=0&id=e4572d94&lang=scss&scoped=true&\"","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"numOfVotes\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"numOfVotes\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"left\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"right\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":59}};\n    doc.loc.source = {\"body\":\"query numOfVotes {\\n  numOfVotes {\\n    left\\n    right\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"numOfVotes\"] = oneQuery(doc, \"numOfVotes\");\n        \n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"votes\"},[_c('ApolloQuery',{attrs:{\"query\":require('../graphql/NumOfVotes.gql')},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar data = ref.result.data;\nreturn _c('div',{},[(data)?[_c('div',{staticClass:\"vote-box\"},[_c('div',{staticClass:\"box\"},[_vm._v(_vm._s(data.numOfVotes.left))]),_c('div',{staticClass:\"box\"},[_vm._v(_vm._s(data.numOfVotes.right))])])]:_vm._e()],2)}}])},[_c('ApolloSubscribeToMore',{attrs:{\"document\":require('../graphql/VoteAdded.gql'),\"update-query\":_vm.onVoteAdded}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"votes\">\n    <!-- Apollo watched Graphql query -->\n    <ApolloQuery\n      :query=\"require('../graphql/NumOfVotes.gql')\"\n    >\n      <ApolloSubscribeToMore\n        :document=\"require('../graphql/VoteAdded.gql')\"\n        :update-query=\"onVoteAdded\"\n      />\n\n      <div slot-scope=\"{ result: { data } }\">\n        <template v-if=\"data\">\n          <div class=\"vote-box\">\n            <div class=\"box\">{{data.numOfVotes.left}}</div>\n            <div class=\"box\">{{data.numOfVotes.right}}</div>\n          </div>\n        </template>\n      </div>\n    </ApolloQuery>\n  </div>\n</template>\n\n<script>\nexport default {\n  methods: {\n    onVoteAdded(previousResult, { subscriptionData }) {\n      return {\n        numOfVotes: {\n          ...subscriptionData.data.voteAdded,\n        },\n      };\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.votes {\n  height: 100vh;\n  background: black;\n  color: white;\n\n  .vote-box {\n    height: 100vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    .box {\n      border: solid 3px white;\n      margin: 10px;\n      padding: 5px;\n      font-size: 25px;\n      font-weight: bold;\n    }\n  }\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Votes.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Votes.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Votes.vue?vue&type=template&id=e4572d94&scoped=true&\"\nimport script from \"./Votes.vue?vue&type=script&lang=js&\"\nexport * from \"./Votes.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Votes.vue?vue&type=style&index=0&id=e4572d94&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"e4572d94\",\n  null\n  \n)\n\nexport default component.exports","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"subscription\",\"name\":{\"kind\":\"Name\",\"value\":\"voteAdded\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"voteAdded\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"left\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"right\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":64}};\n    doc.loc.source = {\"body\":\"subscription voteAdded {\\n  voteAdded {\\n    left\\n    right\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"voteAdded\"] = oneQuery(doc, \"voteAdded\");\n        \n"],"sourceRoot":""}